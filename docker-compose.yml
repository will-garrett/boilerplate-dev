version: '2'
services:
  app:
    container_name: willgarrett-app
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASS}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_ROOT=${MYSQL_ROOT}
      - MYSQL_DATA=${MYSQL_DATA}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    image: willgarrett/app
    volumes:
      -  .:/var/www/html
    ports:
      - "80:80"
    depends_on:
      - neo4j
      - mysql
    networks:
     - dub_net
  node:
    container_name: willgarrett-nodejs
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    image: willgarrett/node
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASS}
      - NEO4J_PASS=${NEO4J_PASS}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATA=${MYSQL_DATA}
    volumes:
     - ./node_src:/usr/app/
    ports:
      - "3000:3000"
    networks:
     - dub_net
    depends_on:
      - neo4j
      - mysql
  mysql:
    container_name: willgarrett-mysql
    image: mysql:5.7
    ports:
     - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATA}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASS}
    volumes:
     - ./mysql_data:/var/lib/mysql
    networks:
     - dub_net
  redis:
    container_name: willgarrett-redis
    image: redis:alpine
    volumes:
     - redisdata:/data
    networks:
     - dub_net
  neo4j:
    container_name: willgarrett-neo4j
    image: neo4j:3.0
    ports:
      - "7474:7474"
    networks:
      - dub_net
    volumes:
      - ./neo4j_data/data:/data
      - ./neo4j_data/logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASS}
networks:
  dub_net:
    driver: "bridge"
volumes:
  redisdata:
    driver: "local"